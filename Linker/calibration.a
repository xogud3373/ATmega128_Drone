;#include <mega128.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;
;unsigned int i = 0;
;unsigned int j = 0;
;
;/*
;// 500us : 921 / 1500us : 2762 / 2500us : 4607
;// 1ms : 1843
;// 2ms : 3690
;*/
;
;void Init_Timer1(void)
; 0000 000E {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 000F   // COM1A1 : OC1AÇÉ Ãâ·Â(PB5) , WGM12~WGM10 : Fast PWM(TOP = ICR1)
; 0000 0010   // COM1B1 : OC1BÇÉ Ãâ·Â(PB6)
; 0000 0011 //  TCCR1A |= (1<<COM1A1)|(1<<COM1B1)|(1<<WGM11);
; 0000 0012 //  TCCR1B |= (1<<WGM13)|(1<<WGM12)|(1<<CS11);  // 8ºÐÁÖ => 14.7456MHz / 8 = 0.542us = 1.8432MHz
; 0000 0013 //  TIMSK |= (1<< OCIE1A) | (1<< OCIE1B) | (1<<TOIE1); // compare match interrupt set, overflow interrupt
; 0000 0014 
; 0000 0015     TCCR1A |= (1<<COM1A1)|(1<<COM1B1)|(1<<WGM11) | (1<<COM1C1);
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0016     TCCR1B |= (1<<WGM13)|(1<<WGM12)|(1<<CS11);  // 8ºÐÁÖ => 14.7456MHz / 8 = 0.542us = 1.8432MHz
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0017     TIMSK =  (1<<TOIE1); // compare match interrupt set, overflow interrupt
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 0018     //ETIMSK |= (1<< OCIE1C);
; 0000 0019 
; 0000 001A     TCNT1 = 0x00;
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 001B     ICR1 = 36864;  // TOP°ª  20000us = 20ms
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 001C 
; 0000 001D     OCR1A = 3690;
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 001E     OCR1B = 3690;
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 001F     OCR1CH = 3690 >> 8;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0020     OCR1CL = 3690 & 0xff;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0021 }
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;
;void Init_Timer3(void)
; 0000 0024 {
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0025     // COM3A1 : OC3AÇÉ Ãâ·Â(PE3) , WGM33~WGM30 : Fast PWM(TOP = ICR1)
; 0000 0026     // COM3B1 : OC3BÇÉ Ãâ·Â(PE4)
; 0000 0027 
; 0000 0028     TCCR3A |= (1<< COM3B1)| (1<<WGM31);  // | (1<< COM3B1) (1<< COM3A1)
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0029     TCCR3B |= (1<< WGM33)| (1<< WGM32)|(1<<CS31);
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 002A     ETIMSK = (1<< TOIE3); // | (1<< OCIE3B); (1<< OCIE3A)
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 002B 
; 0000 002C     TCNT3H = 0x00;
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 002D     TCNT3L = 0x00;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 002E 
; 0000 002F     ICR3H = 36864 >> 8;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0030     ICR3L = 36864 & 0xFF;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 0031 
; 0000 0032     OCR3BH = 3690 >> 8;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0033     OCR3BL = 3690 & 0xff;
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 0034 
; 0000 0035 
; 0000 0036 //    TCCR3A |= (1<< COM3A1)| (1<< COM3B1)| (1<<WGM31);
; 0000 0037 //    TCCR3B |= (1<< WGM33)| (1<< WGM32)|(1<<CS31);
; 0000 0038 //    ETIMSK |= (1<< OCIE3A) | (1<< OCIE3B) | (1<< TOIE3);
; 0000 0039 //
; 0000 003A //    ICR3H = 36864 >> 8;
; 0000 003B //    ICR3L = 36864 & 0xFF;
; 0000 003C //
; 0000 003D //    OCR3AH = 3690 >> 8;
; 0000 003E //    OCR3AL = 3690 & 0xff;
; 0000 003F //
; 0000 0040 //    OCR3BH = 3690 >> 8;
; 0000 0041 //    OCR3BL = 3690 & 0xff;
; 0000 0042 }
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;
;interrupt [TIM1_OVF] void tim1_overflow(void)
; 0000 0045 {
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0046     if(i >= 250)
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 0047     {
; 0000 0048         OCR1A = 1843;
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 0049         OCR1B = 1843;
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 004A         OCR1CH = 1843 >> 8;
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 004B         OCR1CL = 1843 & 0xff;
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 004C         i = 0;
;PCODE: $0000004A VOL: 0
; 0000 004D     }
; 0000 004E 
; 0000 004F     i = i + 1;
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 0050 }
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;
;
;interrupt [TIM3_OVF] void tim3_overflow(void)
; 0000 0054 {
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 0055     if(j >= 250)
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 0056     {
; 0000 0057 
; 0000 0058         OCR3BH = 1843 >> 8;
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 0059         OCR3BL = 1843 & 0xff;
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 005A         j = 0;
;PCODE: $0000005B VOL: 0
; 0000 005B     }
; 0000 005C     j = j + 1;
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 005D }
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;
;//interrupt [TIM1_COMPA] void tim1_compareA(void)
;//{
;//}
;//interrupt [TIM1_COMPB] void tim1_compareB(void)
;//{
;//}
;//interrupt [TIM1_COMPC] void tim1_compareC(void)
;//{
;//}
;//interrupt [TIM3_COMPA] void tim3_compareA(void)
;//{
;//}
;
;void Port_Init(void)
; 0000 006D {
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0000 006E     DDRB = 0xff;
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 006F     DDRE = 0xff;
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 0070     PORTE = 0x00;
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
; 0000 0071     PORTB = 0xff;
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 0072 }
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;
;void main(void)
; 0000 0075 {
;PCODE: $0000006F VOL: 0
; 0000 0076     Port_Init();
;PCODE: $00000070 VOL: 0
; 0000 0077 
; 0000 0078     Init_Timer1();
;PCODE: $00000071 VOL: 0
; 0000 0079     Init_Timer3();
;PCODE: $00000072 VOL: 0
; 0000 007A     SREG |= 0x80;
;PCODE: $00000073 VOL: 0
; 0000 007B 
; 0000 007C     while(1)
;PCODE: $00000074 VOL: 0
; 0000 007D     {
; 0000 007E     }
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0000 007F }
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
